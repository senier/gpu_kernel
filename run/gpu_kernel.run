#
# \brief  Showcases terminal_log server
# \author Alexander Senier
# \date   2016-09-17
#

set build_components {
	core
	init
	drivers/framebuffer
	drivers/input
	drivers/timer
	drivers/wifi
	drivers/rtc
	server/fs_rom
	server/nitpicker
	server/nit_fb
	server/ram_fs
	server/report_rom
	server/terminal
	server/terminal_log
	test/nitpicker
	app/launchpad
	app/pointer
	lib/vfs/jitterentropy
}

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<service name="Nitpicker"> <child name="nitpicker"/> </service>
		<service name="Timer">     <child name="timer"/> </service>
		<service name="Terminal">  <child name="terminal"/> </service>
		<service name="Platform">  <child name="platform_drv"/> </service>
		<any-service><parent/></any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>
	<alias name="fb_drv"    child="fb_sdl"/>
	<alias name="input_drv" child="fb_sdl"/>}

append_platform_drv_config

append_if [have_spec framebuffer] config {
	<start name="fb_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>
	<alias name="input_drv" child="ps2_drv"/>}

append config {
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
		<config>
			<domain name="pointer" layer="1" content="client" label="no" origin="pointer" />
			<domain name="default" layer="2" content="client" label="no" focus="click" hover="always" />
			<policy label="pointer" domain="pointer"/>
			<default-policy domain="default"/>
		</config>
		<route>
			<service name="Input">       <child name="input_drv"/> </service>
			<service name="Framebuffer"> <child name="fb_drv"/>    </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="pointer">
		<resource name="RAM" quantum="1M"/>
	</start>

	<start name="terminal_fb">
		<binary name="nit_fb"/>
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Framebuffer"/>
			<service name="Input"/>
		</provides>
		<config xpos="0" ypos="0" width="3200" height="1800" refresh_rate="25"/>
	</start>

	<start name="terminal">
		<resource name="RAM" quantum="3M"/>
		<provides><service name="Terminal"/></provides>
		<config>
			<!-- supported built-in font sizes are 8, 12, 16, 24 and 36 -->
			<font size="36" />
		</config>
		<route>
			<service name="Input">       <child name="terminal_fb"/> </service>
			<service name="Framebuffer"> <child name="terminal_fb"/> </service>
			<any-service> <parent/> <any-child/></any-service>
		</route>
	</start>

	<start name="terminal_log">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="LOG"/></provides>
		<route>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<any-service> <any-child/> <parent/></any-service>
		</route>
	</start>

	<start name="rtc_drv">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Rtc"/> </provides>
		<route>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<any-service> <any-child/> <parent/></any-service>
		</route>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Report" /> <service name="ROM" /> </provides>
		<config> <rom/> </config>
		<route>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<any-service> <any-child/> <parent/></any-service>
		</route>
	</start>

	<start name="config_fs">
		<binary name="ram_fs"/>
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="File_system"/> </provides>
		<config>
			<policy label="config_rom" root="/"/>
			<policy label="wifi_drv -> config" root="/" writeable="yes"/>
			<content>
				<inline name="wlan_configuration">}
append config "
					<selected_network ssid=\"$::env(GENODE_WIFI_SSID)\" protection=\"WPA-PSK\" psk=\"$::env(GENODE_WIFI_PSK)\"/>"
append config {
				</inline>
				<inline name="wpa_supplicant.conf"></inline>
			</content>
		</config>
		<route>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<any-service> <any-child/> <parent/></any-service>
		</route>
	</start>

	<start name="config_rom">
		<binary name="fs_rom"/>
		<resource name="RAM" quantum="4M"/>
		<provides><service name="ROM"/></provides>
		<route>
			<service name="File_system"> <child name="config_fs" /> </service>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="wifi_drv">
		<resource name="RAM" quantum="32M"/>
		<provides> <service name="Nic"/> </provides>
		<config ld_verbose="yes" verbose="yes">
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc">
				<vfs>
					<dir name="dev"> <log/> <rtc/>
						<jitterentropy name="random"/>
						<jitterentropy name="urandom"/>
					</dir>
					<dir name="config"> <fs label="config"/> </dir>
				</vfs>
			</libc>
		</config>
		<route>
			<service name="Rtc"> <any-child /> </service>
			<service name="File_system"> <child name="config_fs"/> </service>
			<service name="Report"> <child name="report_rom"/> </service>
			<service name="ROM"> <if-arg key="label" value="wlan_configuration" /> <child name="config_rom" /> </service>
<!--
			<service name="LOG">       <child name="terminal_log"/> </service>
-->
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>

	<start name="tcp_terminal">
		<resource name="RAM" quantum="2560K"/>
		<provides> <service name="Terminal"/> </provides>
		<config>
			<policy label="tcp_terminal_log" port="8888"/>
			<libc stdout="/dev/log">
				<vfs> <dir name="dev"> <log/> </dir> </vfs>
			</libc>
		</config>
		<route>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="tcp_terminal_log">
		<binary name="terminal_log"/>
		<resource name="RAM" quantum="1M"/>
		<provides><service name="LOG"/></provides>
		<route>
			<service name="LOG">       <child name="terminal_log"/> </service>
			<service name="Terminal">  <child name="tcp_terminal"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

</config>
}

install_config $config

set firmware_modules {
	iwlwifi-8000C-16.ucode
}

# generic modules
set boot_modules {
	core
	init
	timer
	nitpicker
	pointer
	launchpad
	testnit
	nit_fb
	terminal
	terminal_log
	rtc_drv
	ram_fs
	report_rom
	fs_rom
	vfs_jitterentropy.lib.so
	ld.lib.so
	libc.lib.so
	libcrypto.lib.so
	libssl.lib.so
	wpa_driver_nl80211.lib.so
	wpa_supplicant.lib.so
	wifi.lib.so
	wifi_drv
	lwip.lib.so
}

append boot_modules $firmware_modules

# platform-specific modules
lappend_if [have_spec       linux] boot_modules fb_sdl
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [have_spec         ps2] boot_modules ps2_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules

append qemu_args " -m 256 "
run_genode_until forever
